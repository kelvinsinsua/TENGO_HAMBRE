# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:

# Examples of API resource mapping, learn more at
# https://github.com/dunglas/DunglasApiBundle
    resource.user:
        parent:    "api.resource"
        arguments: [ "UserBundle\\Entity\\User" ]
        calls:
            -      method:    "initNormalizationContext"
                   arguments: [ { groups: [ "user_read" ] } ]
            -      method:    "initDenormalizationContext"
                   arguments: [ { groups: [ "user_write" ] } ]
            -      method:    "initFilters"
                   arguments: [ [ "@resource.user.search_filter" ] ]
        tags:      [ { name: "api.resource" } ]
    
    resource.user.search_filter:
        parent:    "api.doctrine.orm.search_filter"
        arguments: [ { id: "exact", name: "word_start", roles: "exact"  } ]
    
    resource.restaurant:
        parent:    "api.resource"
        arguments: [ "RestaurantBundle\\Entity\\Restaurant" ]
        tags:      [ { name: "api.resource" } ]
    resource.menu:
        parent:    "api.resource"
        arguments: [ "RestaurantBundle\\Entity\\Menu" ]
        tags:      [ { name: "api.resource" } ]
    resource.plate:
        parent:    "api.resource"
        arguments: [ "RestaurantBundle\\Entity\\Plate" ]
        tags:      [ { name: "api.resource" } ]
    resource.ingredient:
        parent:    "api.resource"
        arguments: [ "RestaurantBundle\\Entity\\Ingredient" ]
        tags:      [ { name: "api.resource" } ]
    resource.schedule:
        parent:    "api.resource"
        arguments: [ "RestaurantBundle\\Entity\\Schedule" ]
        tags:      [ { name: "api.resource" } ]
    resource.aditional:
        parent:    "api.resource"
        arguments: [ "RestaurantBundle\\Entity\\Aditional" ]
        tags:      [ { name: "api.resource" } ]
    resource.client:
        parent:    "api.resource"
        arguments: [ "UserBundle\\Entity\\Client" ]
        tags:      [ { name: "api.resource" } ]
        
    app.jwt_token_authenticator:
        class: AppBundle\Security\JwtAuthenticator
        arguments: ['@doctrine.orm.entity_manager', '@lexik_jwt_authentication.encoder']
    
    kernel.event_listener.json_request_transformer:
        class: Qandidate\Common\Symfony\HttpKernel\EventListener\JsonRequestTransformerListener
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 100 }
    
    app.event.jwt_response_listener:
        class: AppBundle\EventListener\JWTResponseListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
        arguments: [ '@service_container' , '@doctrine.orm.entity_manager','@request_stack' ]
        
    user.registration.form.type:
        class: UserBundle\Form\Type\RegistrationFormType
        arguments: ["%fos_user.model.user.class%", '@service_container']
        tags:
            - { name: form.type, alias: user_registration }
    user.registration.form.handler:
        class: UserBundle\Form\Handler\RegistrationFormHandler
        arguments: ["@fos_user.registration.form", "@request", "@fos_user.user_manager", "@fos_user.mailer", "@fos_user.util.token_generator"]
        scope: request
        public: false
    
    
    user.resetting.form:
        class: UserBundle\Form\Type\ResettingFormType
        arguments: ["%fos_user.model.user.class%", '@service_container']
        tags:
            - { name: form.type,  alias: user_resetting }
    user.resetting.form.handler:
        class: UserBundle\Form\Handler\ResettingFormHandler
        arguments: ["@fos_user.resetting.form", "@request", "@fos_user.user_manager"]
        scope: request
        public: false

#    resource.person:
#        parent:    "api.resource"
#        arguments: [ "AppBundle\\Entity\\Person" ]
#        tags:      [ { name: "api.resource" } ]
#
#    resource.organization:
#        parent:    "api.resource"
#        arguments: [ "AppBundle\\Entity\\Organization" ]
#        calls:
#            -      [ "initFilters", [ [ "@resource.organization.filter" ] ] ]
#        tags:      [ { name: "api.resource" } ]
#
#    resource.organization.filter:
#        parent:    "api.doctrine.orm.search_filter"
#        arguments: [ { "name": "exact", "url": "partial" } ]

# A typical service
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
